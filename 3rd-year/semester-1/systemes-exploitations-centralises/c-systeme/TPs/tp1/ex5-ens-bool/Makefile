CC=gcc  		# Compilateur
CFLAGS=-Wall		# Option(s) de la commande de compilation
LDFLAGS=		# Option(s) pour l'édition de liens
EXEC=main		# nom des exécutables à générer
SRC=$(wildcard *.c)	# liste des fichiers source du projet
OBJ= $(SRC:.c=.o)	# liste des fichiers objets

#cible: dependance
#	commandes

# $@ : nom de la cible
# $< : nom de la 1ère dépendance
# $^ : liste des dépendances
# $? : liste des dépendances plus récentes que la cible
# $* : nom du fichier sans suffixe

# première règle du fichier, regroupe dans ces dépendances l'ensemble des exécutable à créer
all: $(EXEC)

$(EXEC): $(OBJ)
	$(CC) -o $@ $^ $(LDFLAGS)

#hello.o: hello.c
#	@$(CC) -o $@ -c $< $(CFLAGS)
#
# @ : devant une ligne pour déactiver l'echo 
#
#main.o: main.c hello.h
#	$(CC) -o $@ -c $< $(CFLAGS)

$(EXEC).o: ens-bool.h

# construie un .o à partir d'un .c
%.o: %.c
	$(CC) -o $@ -c $< $(CFLAGS)

.PHONY: clean mrproper

# permet de supprimer tous les fichiers intermédiaires
clean:
	rm -rf *.o

# supprime tout ce qui peut être regénéré et permet une reconstruction complète du projet
mrproper: clean
	rm -rf $(EXEC)


